<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sgworld.infra.modules.admin.membergroup.MemberGroupMapper">

	<resultMap id="MemberGroup" type="com.sgworld.infra.modules.admin.membergroup.MemberGroup"></resultMap>
	
	<select id="selectMmList" resultMap="MemberGroup">
		select * from infrMember
	</select>
	
	<select id="selectMmOne" resultMap="MemberGroup">
		select * from infrMember
		WHERE 1=1 
		AND infrMmSeq = #{infrMmSeq}
	</select>
	
	<select id="selectUserLogin" resultMap="MemberGroup">
		select 
			infrMmId
			,infrMmPw
			,infrMmSeq
			,infrMmName
			from infrMember
		where 1=1
		and infrMmId = #{infrMmId}
		and infrMmPw = #{infrMmPw}
	</select>
	
	<select id="isduple" resultMap="MemberGroup">
		select 
	<choose>
		<when test="dupleValiObj ==  infrMmId">
				infrMmId
			from infrMember 
			where 
				infrMmId = #{shDupleStr}
		</when>
		<when test="dupleValiObj ==  infrMmPw">
				infrMmPw
			from infrMember 
			where 
				infrMmPw = #{shDupleStr}
		</when>
		<when test="dupleValiObj ==  infrMmName">
				infrMmName
			from infrMember 
			where 
				infrMmName = #{shDupleStr
		</when>
		<when test="dupleValiObj ==  infrMmNickName">
				infrMmNickname
			from infrMember 
			where 
				infrMmNickname = #{shDupleStr
		</when>
		<when test="dupleValiObj ==  infrMmPhone">
				infrMmPhone
			from infrMember 
			where 
				infrMmPhone = #{shDupleStr
		</when>
	</choose>
	</select>
	
	<insert id="insertMmSignIn">
	insert into infrMemeber(
	  infrMmId
	  ,infrMmPw
	  ,infrMmName
	  ,infrMmNickname
	  ,infrMmBod
	  ,infrMmGender
	  ,infrMmTelecom
	  ,infrMmPhone
	  ,infrMmEmailId
	  ,infrMmEmailAddress
	  ,infrMmZip
	  ,infrMmRoadAddress
	  ,infrMmJibunAddress
	  ,infrMmDetailAddress
	  ,infrMmLat
	  ,infrMmLong
	  ,regDateAt
	) values(
	  #{infrMmId}
	  ,#{infrMmKakaoIdToken}
	  ,MD5(#{infrMmPw})
	  ,#{infrMmName}
	  ,#{infrMmNinckName}
	  ,#{infrMmDod}
	  ,#{infrMmGender}
	  ,#{infrMmPhone}
	  ,#{infrMmEmailId}
	  ,#{infrMmEmailAddr}
	  ,#{infrMmZip}
	  ,#{infrMmRoadAdress}
	  ,#{infrMmJibunAdress}
	  ,#{infrMmDetailAdress}
	  ,#{infrMmLat}
	  ,#{infrMmLong}
	  ,now()
	)
	</insert>
	
	<!-- admin_회원정보 수정 -->
	<update id="udptMmifo">
		UPDATE infrMember
		SET
			infrMmId = #{infrMmId}
			,infrMmName = #{infrMmName}
			,infrMmPw = #{infrMmPw}
			,infrMmEmailId = #{infrMmEmailId}
			,infrMmNickname = #{infrMmNickname}
			,infrMmGender = #{infrMmGender}
			,infrMmBod = #{infrMmBod}
			,infrMmPhone = #{infrMmPhone}
			,infrMmDelNy = #{infrMmDelNy}
			,infrMmUseNy = #{infrMmUseNy}
		WHERE 1=1
			AND infrMmSeq = #{infrMmSeq}	
	</update>
	
	<update id="ueleteMm">
	</update>
	
	<delete id="deleteMm">
	</delete>
	
	<!-- user_계시판 리스트 띠우기 -->
	<select id="selectListBoard" resultMap="MemberGroup">
		SELECT
			a.infrMmSeq
			,b.bdTitle
			,b.regDatetime
			,(SELECT COUNT(aa.bdLikeSeq) FROM bdLike aa where 1=1 AND aa.bdSeq = b.bdSeq)as bdLikeSeq
		FROM infrMember a
		LEFT JOIN board b on b.infrMmSeq = a.infrMmSeq
		WHERE 1=1
			AND a.infrMmSeq = #{infrMmSeq}
	</select>
	
</mapper>
